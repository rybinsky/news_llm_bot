import os

import streamlit as st
from dotenv import load_dotenv
from langchain_ollama.llms import OllamaLLM

from bot.services import EXAMPLES_CLS_TOPIC, DatabaseManager, TopicClassifier, load_config, setup_logging


def geenrate_response() -> None:
    pass


def main():
    """Main application entry point."""
    load_dotenv()
    st.title("ü§ñ AI-–∞–≥–µ–Ω—Ç: –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –º–µ–º–æ–≤ –ø–æ –ø–æ—Å–ª–µ–¥–Ω–∏–º –Ω–æ–≤–æ—Å—Ç—è–º")
    st.markdown("–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –Ω–∞ –ª—é–±–æ–º —è–∑—ã–∫–µ")

    config = load_config()

    logger = setup_logging(config.logging)

    db_manager = DatabaseManager(logger)

    classifier = TopicClassifier(
        topics=set(config.classifier.topics),
        example_articles=EXAMPLES_CLS_TOPIC,
        model_name=config.ollama.model,
        temperature=config.classifier.temperature,
        max_attempts=config.classifies.max_attempts,
        logger=logger,
    )

    llm = OllamaLLM(model=config.generator.model, temperature=config.generator.temperature)

    try:
        db_manager.initialize(
            {
                "user": os.getenv("POSTGRES_USER"),
                "password": os.getenv("POSTGRES_PASS"),
                "host": os.getenv("POSTGRES_HOST"),
                "port": os.getenv("POSTGRES_PORT"),
                "database": os.getenv("POSTGRES_DB"),
            }
        )

        user_query = st.text_input("–û —á–µ–º –≤—ã —Ö–æ—Ç–∏—Ç–µ –º–µ–º/–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π?", "")

        if user_query:
            with st.spinner("–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∏ –∏—â–µ–º –ø–æ—Ö–æ–∂–∏–µ –Ω–æ–≤–æ—Å—Ç–∏..."):
                topic = classifier.classify(user_query)
                news = db_manager.get_last_news_by_topic(topic)
                response = geenrate_response()

                st.subheader(f"–ß–∏—Ç–∞–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –ø–æ —Ç–µ–º–µ '{topic}'...")
                st.markdown("üí¨ **–ú–µ–º:**")
                st.write(response)

    except Exception as e:
        logger.error("Application error: %s", str(e), exc_info=True)

    finally:
        db_manager.close()


if __name__ == "__main__":
    main()
